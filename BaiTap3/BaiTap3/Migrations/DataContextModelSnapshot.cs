// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Share.Model;

namespace BaiTap3.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Share.Model.CaHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TenCaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("TgianBatDau")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TgianKetThuc")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("CaHocs");
                });

            modelBuilder.Entity("Share.Model.Diem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiDiem")
                        .HasColumnType("int");

                    b.Property<int>("SoCotDiem")
                        .HasColumnType("int");

                    b.Property<int>("SoCotDiemBatBuoc")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiDiem");

                    b.ToTable("Diems");
                });

            modelBuilder.Entity("Share.Model.GiangVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayMonChinh")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<string>("MasoThue")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenDemVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayMonChinh");

                    b.HasIndex("role");

                    b.ToTable("GiangViens");
                });

            modelBuilder.Entity("Share.Model.HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MaDangNhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenDemVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("role");

                    b.ToTable("HocViens");
                });

            modelBuilder.Entity("Share.Model.HocVien_Diem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiemId")
                        .HasColumnType("int");

                    b.Property<int>("ID_HocVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_LoaiDiem")
                        .HasColumnType("int");

                    b.Property<int>("ID_MonHoc")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("SoDiem")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DiemId");

                    b.HasIndex("ID_HocVien");

                    b.HasIndex("ID_LoaiDiem");

                    b.HasIndex("ID_MonHoc");

                    b.ToTable("HocVien_Diems");
                });

            modelBuilder.Entity("Share.Model.KhoaDaoTao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("KhoaDaoTaos");
                });

            modelBuilder.Entity("Share.Model.LichDay", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ca")
                        .HasColumnType("int");

                    b.Property<int>("GiaoVien")
                        .HasColumnType("int");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("LopHoc")
                        .HasColumnType("int");

                    b.Property<int>("MonHoc")
                        .HasColumnType("int");

                    b.Property<string>("Thu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GiaoVien");

                    b.HasIndex("LopHoc");

                    b.HasIndex("MonHoc");

                    b.ToTable("LichDays");
                });

            modelBuilder.Entity("Share.Model.LichHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ca")
                        .HasColumnType("int");

                    b.Property<int>("MonHoc")
                        .HasColumnType("int");

                    b.Property<int>("PhongHoc")
                        .HasColumnType("int");

                    b.Property<int>("Thu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ca");

                    b.HasIndex("MonHoc");

                    b.HasIndex("PhongHoc");

                    b.HasIndex("Thu");

                    b.ToTable("LichHocs");
                });

            modelBuilder.Entity("Share.Model.LichNghi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayNghi")
                        .HasColumnType("datetime");

                    b.Property<string>("TenNgayNghi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("LichNghis");
                });

            modelBuilder.Entity("Share.Model.LienHe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TinNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LienHes");
                });

            modelBuilder.Entity("Share.Model.LoaiDiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("LoaiDiems");
                });

            modelBuilder.Entity("Share.Model.LopHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("HocPhi")
                        .HasColumnType("real");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("KhoaDaoTao")
                        .HasColumnType("int");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayKhaiGiang")
                        .HasColumnType("datetime");

                    b.Property<int>("SoLuongHocVienDangCo")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongHocVienToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KhoaDaoTao");

                    b.ToTable("LopHocs");
                });

            modelBuilder.Entity("Share.Model.Lop_HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_HocVien")
                        .HasColumnType("int");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime");

                    b.Property<bool>("TrangThaiHocPhi")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id_HocVien");

                    b.HasIndex("MaLop");

                    b.ToTable("Lop_HocViens");
                });

            modelBuilder.Entity("Share.Model.Luong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_GiangVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhanLuong")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TeacherSalary")
                        .HasColumnType("float");

                    b.Property<float>("TienLuong")
                        .HasColumnType("real");

                    b.Property<float>("TongTienNhan")
                        .HasColumnType("real");

                    b.Property<float>("TroCap")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ID_GiangVien");

                    b.ToTable("Luongs");
                });

            modelBuilder.Entity("Share.Model.MonHoc", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("KhoaDaoTao")
                        .HasColumnType("int");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("KhoaDaoTao");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("Share.Model.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("role");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("Share.Model.NguoiDung_QUyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_NguoiDug")
                        .HasColumnType("int");

                    b.Property<int>("ID_Quyen")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ID_NguoiDug");

                    b.HasIndex("ID_Quyen");

                    b.ToTable("NguoiDung_QUyens");
                });

            modelBuilder.Entity("Share.Model.Quyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Quyens");
                });

            modelBuilder.Entity("Share.Model.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Share.Model.ThuHocPhi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("GiamGia")
                        .HasColumnType("real");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<float>("MucThuPhi")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MaLopHoc");

                    b.ToTable("ThuHocPhis");
                });

            modelBuilder.Entity("Share.Model.ThuHocPhiChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_MaHocVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_MaLop")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("SoTien")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ID_MaGiangVien");

                    b.HasIndex("ID_MaHocVien");

                    b.HasIndex("ID_MaLop");

                    b.ToTable("ThuHocPhiChiTiets");
                });

            modelBuilder.Entity("Share.Model.ThuNgay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IsDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuNgayCuThe")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ThuNgays");
                });

            modelBuilder.Entity("Share.Model.ToBoMon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TenToBoMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ToBoMons");
                });

            modelBuilder.Entity("Share.Model.Diem", b =>
                {
                    b.HasOne("Share.Model.LoaiDiem", "LoaiDiems")
                        .WithMany("Diems")
                        .HasForeignKey("LoaiDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiDiems");
                });

            modelBuilder.Entity("Share.Model.GiangVien", b =>
                {
                    b.HasOne("Share.Model.MonHoc", "MonHocs")
                        .WithMany("GiangViens")
                        .HasForeignKey("DayMonChinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.Roles", "Roles")
                        .WithMany("GiangViens")
                        .HasForeignKey("role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHocs");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Share.Model.HocVien", b =>
                {
                    b.HasOne("Share.Model.Roles", "Roles")
                        .WithMany("HocViens")
                        .HasForeignKey("role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Share.Model.HocVien_Diem", b =>
                {
                    b.HasOne("Share.Model.Diem", null)
                        .WithMany("HocVien_Diems")
                        .HasForeignKey("DiemId");

                    b.HasOne("Share.Model.HocVien", "HocViens")
                        .WithMany("HocVien_Diems")
                        .HasForeignKey("ID_HocVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.LoaiDiem", "LoaiDiems")
                        .WithMany()
                        .HasForeignKey("ID_LoaiDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.MonHoc", "MonHocs")
                        .WithMany()
                        .HasForeignKey("ID_MonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocViens");

                    b.Navigation("LoaiDiems");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("Share.Model.LichDay", b =>
                {
                    b.HasOne("Share.Model.GiangVien", "GiangViens")
                        .WithMany("LichDays")
                        .HasForeignKey("GiaoVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.LopHoc", "LopHocs")
                        .WithMany("LichDays")
                        .HasForeignKey("LopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.MonHoc", "MonHocs")
                        .WithMany("LichDays")
                        .HasForeignKey("MonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangViens");

                    b.Navigation("LopHocs");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("Share.Model.LichHoc", b =>
                {
                    b.HasOne("Share.Model.CaHoc", "Cahocs")
                        .WithMany("LichHocs")
                        .HasForeignKey("Ca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.MonHoc", "MonHocs")
                        .WithMany("LichHocs")
                        .HasForeignKey("MonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.LopHoc", "LopHocs")
                        .WithMany()
                        .HasForeignKey("PhongHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.ThuNgay", "ThuNgays")
                        .WithMany("LichHocs")
                        .HasForeignKey("Thu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cahocs");

                    b.Navigation("LopHocs");

                    b.Navigation("MonHocs");

                    b.Navigation("ThuNgays");
                });

            modelBuilder.Entity("Share.Model.LopHoc", b =>
                {
                    b.HasOne("Share.Model.KhoaDaoTao", "KhoaDaoTaos")
                        .WithMany("LopHocs")
                        .HasForeignKey("KhoaDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaDaoTaos");
                });

            modelBuilder.Entity("Share.Model.Lop_HocVien", b =>
                {
                    b.HasOne("Share.Model.HocVien", "HocViens")
                        .WithMany("Lop_HocViens")
                        .HasForeignKey("Id_HocVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.LopHoc", "LopHocs")
                        .WithMany("Lop_HocViens")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocViens");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("Share.Model.Luong", b =>
                {
                    b.HasOne("Share.Model.GiangVien", "giangViens")
                        .WithMany("Luongs")
                        .HasForeignKey("ID_GiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("giangViens");
                });

            modelBuilder.Entity("Share.Model.MonHoc", b =>
                {
                    b.HasOne("Share.Model.KhoaDaoTao", "KhoaDaoTaos")
                        .WithMany("MonHocs")
                        .HasForeignKey("KhoaDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaDaoTaos");
                });

            modelBuilder.Entity("Share.Model.NguoiDung", b =>
                {
                    b.HasOne("Share.Model.Roles", "Roles")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Share.Model.NguoiDung_QUyen", b =>
                {
                    b.HasOne("Share.Model.NguoiDung", "NguoiDungs")
                        .WithMany("NguoiDung_QUyens")
                        .HasForeignKey("ID_NguoiDug")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.Quyen", "Quyens")
                        .WithMany("NguoiDung_QUyens")
                        .HasForeignKey("ID_Quyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDungs");

                    b.Navigation("Quyens");
                });

            modelBuilder.Entity("Share.Model.ThuHocPhi", b =>
                {
                    b.HasOne("Share.Model.LopHoc", "LopHocs")
                        .WithMany("ThuHocPhis")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("Share.Model.ThuHocPhiChiTiet", b =>
                {
                    b.HasOne("Share.Model.GiangVien", "GiangViens")
                        .WithMany("ThuHocPhiChiTiets")
                        .HasForeignKey("ID_MaGiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.HocVien", "HocViens")
                        .WithMany("ThuHocPhiChiTiets")
                        .HasForeignKey("ID_MaHocVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Share.Model.LopHoc", "LopHocs")
                        .WithMany("ThuHocPhiChiTiets")
                        .HasForeignKey("ID_MaLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangViens");

                    b.Navigation("HocViens");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("Share.Model.CaHoc", b =>
                {
                    b.Navigation("LichHocs");
                });

            modelBuilder.Entity("Share.Model.Diem", b =>
                {
                    b.Navigation("HocVien_Diems");
                });

            modelBuilder.Entity("Share.Model.GiangVien", b =>
                {
                    b.Navigation("LichDays");

                    b.Navigation("Luongs");

                    b.Navigation("ThuHocPhiChiTiets");
                });

            modelBuilder.Entity("Share.Model.HocVien", b =>
                {
                    b.Navigation("HocVien_Diems");

                    b.Navigation("Lop_HocViens");

                    b.Navigation("ThuHocPhiChiTiets");
                });

            modelBuilder.Entity("Share.Model.KhoaDaoTao", b =>
                {
                    b.Navigation("LopHocs");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("Share.Model.LoaiDiem", b =>
                {
                    b.Navigation("Diems");
                });

            modelBuilder.Entity("Share.Model.LopHoc", b =>
                {
                    b.Navigation("LichDays");

                    b.Navigation("Lop_HocViens");

                    b.Navigation("ThuHocPhiChiTiets");

                    b.Navigation("ThuHocPhis");
                });

            modelBuilder.Entity("Share.Model.MonHoc", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("LichDays");

                    b.Navigation("LichHocs");
                });

            modelBuilder.Entity("Share.Model.NguoiDung", b =>
                {
                    b.Navigation("NguoiDung_QUyens");
                });

            modelBuilder.Entity("Share.Model.Quyen", b =>
                {
                    b.Navigation("NguoiDung_QUyens");
                });

            modelBuilder.Entity("Share.Model.Roles", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("HocViens");

                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("Share.Model.ThuNgay", b =>
                {
                    b.Navigation("LichHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
